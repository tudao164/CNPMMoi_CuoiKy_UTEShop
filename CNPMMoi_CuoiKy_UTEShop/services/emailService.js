const { createTransporter } = require('../config/email');
const { EMAIL_SUBJECTS } = require('../utils/constants');

class EmailService {
    constructor() {
        this.transporter = createTransporter();
    }

    // Send OTP email for registration
    async sendRegistrationOTP(email, fullName, otpCode) {
        const mailOptions = {
            from: `"UTEShop" <${process.env.EMAIL_USER}>`,
            to: email,
            subject: EMAIL_SUBJECTS.VERIFY_ACCOUNT,
            html: this.getRegistrationOTPTemplate(fullName, otpCode)
        };

        try {
            await this.transporter.sendMail(mailOptions);
            console.log(`‚úÖ Registration OTP sent to ${email}`);
            return true;
        } catch (error) {
            console.error('‚ùå Error sending registration OTP:', error);
            throw new Error('Kh√¥ng th·ªÉ g·ª≠i email x√°c th·ª±c');
        }
    }

    // Send OTP email for password reset
    async sendPasswordResetOTP(email, fullName, otpCode) {
        const mailOptions = {
            from: `"UTEShop" <${process.env.EMAIL_USER}>`,
            to: email,
            subject: EMAIL_SUBJECTS.RESET_PASSWORD,
            html: this.getPasswordResetOTPTemplate(fullName, otpCode)
        };

        try {
            await this.transporter.sendMail(mailOptions);
            console.log(`‚úÖ Password reset OTP sent to ${email}`);
            return true;
        } catch (error) {
            console.error('‚ùå Error sending password reset OTP:', error);
            throw new Error('Kh√¥ng th·ªÉ g·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u');
        }
    }

    // Send welcome email after successful verification
    async sendWelcomeEmail(email, fullName) {
        const mailOptions = {
            from: `"UTEShop" <${process.env.EMAIL_USER}>`,
            to: email,
            subject: EMAIL_SUBJECTS.WELCOME,
            html: this.getWelcomeTemplate(fullName)
        };

        try {
            await this.transporter.sendMail(mailOptions);
            console.log(`‚úÖ Welcome email sent to ${email}`);
            return true;
        } catch (error) {
            console.error('‚ùå Error sending welcome email:', error);
            // Don't throw error for welcome email as it's not critical
            return false;
        }
    }

    // Registration OTP email template
    getRegistrationOTPTemplate(fullName, otpCode) {
        return `
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>X√°c th·ª±c t√†i kho·∫£n UTEShop</title>
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: #007bff; color: white; padding: 20px; text-align: center; }
                .content { padding: 30px 20px; background: #f9f9f9; }
                .otp-box { background: #007bff; color: white; padding: 20px; text-align: center; font-size: 24px; font-weight: bold; margin: 20px 0; border-radius: 5px; }
                .footer { text-align: center; padding: 20px; color: #666; font-size: 14px; }
                .btn { display: inline-block; padding: 12px 24px; background: #28a745; color: white; text-decoration: none; border-radius: 5px; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>UTEShop</h1>
                    <p>X√°c th·ª±c t√†i kho·∫£n c·ªßa b·∫°n</p>
                </div>
                <div class="content">
                    <h2>Xin ch√†o ${fullName}!</h2>
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i UTEShop. ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng s·ª≠ d·ª•ng m√£ OTP b√™n d∆∞·ªõi:</p>
                    
                    <div class="otp-box">
                        ${otpCode}
                    </div>
                    
                    <p><strong>L∆∞u √Ω:</strong></p>
                    <ul>
                        <li>M√£ OTP c√≥ hi·ªáu l·ª±c trong v√≤ng 5 ph√∫t</li>
                        <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                        <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒëƒÉng k√Ω t√†i kho·∫£n, vui l√≤ng b·ªè qua email n√†y</li>
                    </ul>
                </div>
                <div class="footer">
                    <p>&copy; 2024 UTEShop. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                </div>
            </div>
        </body>
        </html>
        `;
    }

    // Password reset OTP email template
    getPasswordResetOTPTemplate(fullName, otpCode) {
        return `
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u UTEShop</title>
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: #dc3545; color: white; padding: 20px; text-align: center; }
                .content { padding: 30px 20px; background: #f9f9f9; }
                .otp-box { background: #dc3545; color: white; padding: 20px; text-align: center; font-size: 24px; font-weight: bold; margin: 20px 0; border-radius: 5px; }
                .footer { text-align: center; padding: 20px; color: #666; font-size: 14px; }
                .warning { background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin: 15px 0; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>UTEShop</h1>
                    <p>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</p>
                </div>
                <div class="content">
                    <h2>Xin ch√†o ${fullName}!</h2>
                    <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n UTEShop c·ªßa b·∫°n. Vui l√≤ng s·ª≠ d·ª•ng m√£ OTP b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:</p>
                    
                    <div class="otp-box">
                        ${otpCode}
                    </div>
                    
                    <div class="warning">
                        <p><strong>‚ö†Ô∏è C·∫£nh b√°o b·∫£o m·∫≠t:</strong></p>
                        <ul>
                            <li>M√£ OTP c√≥ hi·ªáu l·ª±c trong v√≤ng 5 ph√∫t</li>
                            <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                            <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, h√£y b·ªè qua email n√†y v√† ki·ªÉm tra b·∫£o m·∫≠t t√†i kho·∫£n</li>
                        </ul>
                    </div>
                </div>
                <div class="footer">
                    <p>&copy; 2024 UTEShop. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                </div>
            </div>
        </body>
        </html>
        `;
    }

    // Welcome email template
    getWelcomeTemplate(fullName) {
        return `
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>Ch√†o m·ª´ng ƒë·∫øn v·ªõi UTEShop</title>
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: #28a745; color: white; padding: 20px; text-align: center; }
                .content { padding: 30px 20px; background: #f9f9f9; }
                .footer { text-align: center; padding: 20px; color: #666; font-size: 14px; }
                .btn { display: inline-block; padding: 12px 24px; background: #007bff; color: white; text-decoration: none; border-radius: 5px; margin: 10px 5px; }
                .feature-box { background: white; padding: 20px; margin: 15px 0; border-radius: 5px; border-left: 4px solid #007bff; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>üéâ Ch√†o m·ª´ng ƒë·∫øn v·ªõi UTEShop!</h1>
                </div>
                <div class="content">
                    <h2>Xin ch√†o ${fullName}!</h2>
                    <p>T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c th√†nh c√¥ng! Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi c·ªông ƒë·ªìng UTEShop - n∆°i mua s·∫Øm tr·ª±c tuy·∫øn ƒë√°ng tin c·∫≠y.</p>
                    
                    <div class="feature-box">
                        <h3>üõçÔ∏è Kh√°m ph√° ngay:</h3>
                        <ul>
                            <li>H√†ng ng√†n s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao</li>
                            <li>Gi√° c·∫£ c·∫°nh tranh, nhi·ªÅu ∆∞u ƒë√£i h·∫•p d·∫´n</li>
                            <li>Giao h√†ng nhanh ch√≥ng to√†n qu·ªëc</li>
                            <li>H·ªó tr·ª£ kh√°ch h√†ng 24/7</li>
                        </ul>
                    </div>

                    <div style="text-align: center; margin: 30px 0;">
                        <a href="#" class="btn">B·∫Øt ƒë·∫ßu mua s·∫Øm</a>
                        <a href="#" class="btn">Xem ∆∞u ƒë√£i</a>
                    </div>

                    <p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, ƒë·ªôi ng≈© h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i lu√¥n s·∫µn s√†ng gi√∫p ƒë·ª° b·∫°n!</p>
                </div>
                <div class="footer">
                    <p>&copy; 2024 UTEShop. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                    <p>Theo d√µi ch√∫ng t√¥i tr√™n m·∫°ng x√£ h·ªôi ƒë·ªÉ c·∫≠p nh·∫≠t nh·ªØng ∆∞u ƒë√£i m·ªõi nh·∫•t!</p>
                </div>
            </div>
        </body>
        </html>
        `;
    }
}

module.exports = new EmailService();
